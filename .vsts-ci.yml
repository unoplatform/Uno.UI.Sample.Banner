jobs:
- job: Windows
  pool:
    vmImage: "windows-2022"
  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget
    NUGET_HTTP_CACHE_PATH: $(Agent.WorkFolder)\.nuget-http-cache
    SourceLinkEnabled: false

  steps:
  - task: GitVersion@4
    inputs:
      updateAssemblyInfo: false   

  # This SDK version is needed as long as `uap10.0` will be supported in Uno.Core
  - powershell: .\build\Install-WindowsSdkISO.ps1 19041
    displayName: Install Windows SDK 19041

  - template: build/ci/dotnet-install-windows.yml

  - task: MSBuild@1
    inputs:
      solution: src/Uno.UI.Sample.Banner.sln
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /p:Configuration=Release "/p:PackageOutputPath=$(build.artifactstagingdirectory)\nuget" "/p:PackageVersion=%GITVERSION_FullSemVer%" "/p:InformationalVersion=%GITVERSION_InformationalVersion%" /detailedsummary
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false
      
  - task: PowerShell@2
    displayName: Authenticode Sign Packages
    inputs:
      filePath: build/Sign-Package.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      SignPackageName: "Uno.UI.Sample.Banner"
      SignPackageDescription: "Uno.UI Sample Banner"
      ArtifactDirectory: $(build.artifactstagingdirectory)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: PublishBuildArtifacts@1
    displayName: Publish Package Artifacts
    inputs:
      pathToPublish: $(build.artifactstagingdirectory)
      artifactType: container
      artifactName: UnoBanner